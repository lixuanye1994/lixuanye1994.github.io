<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Nanopi Neo2 入坑指南</title>
    <link href="/2021/06/10/Nanopi-Neo2-%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    <url>/2021/06/10/Nanopi-Neo2-%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h3 id="写在前面："><a href="#写在前面：" class="headerlink" title="写在前面："></a>写在前面：</h3><p>​        偶然间在B站看到了一位野生极客工程师大佬<a href="https://www.bilibili.com/video/BV19E411a7Sf">稚晖君</a>的room tour视频，很是激动和羡慕啊，又注意到超迷你的开发板设备 Nanopi ，心血来潮！这比树莓派等小巧太多了，可装linux系统，那就意味着，可以拥有一台属于自己的Web服务器、FTP服务器、游戏服务器、NAS服务器。。。等等一系列骚操作，小巧省电，性能够用！ 那还不着手搞事情</p><p>​       作为一个立志成为全栈工程师的我，立刻咸鱼入手开始 开发板入坑之旅</p><hr><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><blockquote><p>官方 WIKI <a href="http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2/zh">http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2/zh</a></p><p>新机到手操作</p></blockquote><ul><li><p>烧录系统</p><ul><li><p>下载系统固件</p><p><a href="https://pan.baidu.com/s/1rtZfrVg4fP1WhjlspvfJfA">百度网盘</a>  </p><ul><li>使用镜像 <strong>nanopi-neo2_sd_friendlycore-xenial_4.14_arm64_YYYYMMDD.img.zip</strong> </li><li>烧写工具 <strong>win32diskimager.rar</strong></li><li>完成后插卡上电STAT灯闪烁，成功启动系统。如长期处于红灯状态，需重新烧录系统！</li></ul></li></ul></li><li><p>登录</p><p>烧录系统成功后，这其实就成为一台普通的linux电脑，在linux下先操作好用户账户密码，之后再考虑各种骚操作。以下是个人设置的<strong>普通账户</strong>和<strong>超级账户</strong>：</p><ul><li><p>普通用户：    </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">用户名: <span class="hljs-literal">pi</span><br>密  码: <span class="hljs-number">1994</span><br></code></pre></td></tr></table></figure></li><li><p>Root用户：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">用户名: root<br>密  码: <span class="hljs-symbol">1994lxy@</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>进入系统</p><ul><li><p>软件包源设置成国内：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs linux">$ wget http://wiki.friendlyarm.com/utils/aptsouce.sh<br>$ chmod 755 aptsouce.sh<br>$ sudo -H ./aptsouce.sh<br>$ sudo apt-get update<br><br></code></pre></td></tr></table></figure></li><li><p>安装OLED驱动</p><p>购买的Nanopi 和稚晖君 一直，只是外壳是银色金属，配屏幕128*90像素，后期考虑完成 blackapple</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/friendlyarm/NanoHatOLED.git</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> NanoHatOLED</span><br><span class="hljs-meta">$</span><span class="bash"> sudo -H ./intall.sh</span><br></code></pre></td></tr></table></figure><p>重启完成</p></li></ul></li></ul><hr><h3 id="部署LAMP-LNMP环境"><a href="#部署LAMP-LNMP环境" class="headerlink" title="部署LAMP/LNMP环境"></a>部署LAMP/LNMP环境</h3><blockquote><p>暂时选择了LAMP环境，Nginx 暂时不熟悉，后面再尝试更换</p><p>已完成通过 <a href="http://ingcraft.cn:8888/love.html">http://ingcraft.cn:8888/love.html</a> 来访问此服务器</p><p>还部署了自己的毕业设计作品 OA系统通过 <a href="http://ingcraft.cn:8888/ml">http://ingcraft.cn:8888/ml</a> 来访问</p></blockquote><ol><li>安装mysql</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ apt-<span class="hljs-builtin-name">get</span> install mysql-server<br>$ apt-<span class="hljs-builtin-name">get</span> install mysql-client<br>账号 root<br>密码 1994lxy@<br></code></pre></td></tr></table></figure><ol start="2"><li>安装apache</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ apt-<span class="hljs-builtin-name">get</span> install apache2<br></code></pre></td></tr></table></figure><ol start="3"><li>安装php</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ apt-<span class="hljs-builtin-name">get</span> install php<br>$ apt-<span class="hljs-builtin-name">get</span> install libapache2-mod-php<br>$ apt-<span class="hljs-builtin-name">get</span> install php7.0-mysql<br></code></pre></td></tr></table></figure><ol start="4"><li>检查</li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>apache2  -v<br><span class="hljs-variable">$ </span>mysql --version<br><span class="hljs-variable">$ </span>php  -v<br></code></pre></td></tr></table></figure><ol start="5"><li>使用</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs awk">apache 服务<br>查看状态：$ service apache2 status<span class="hljs-regexp">/start/</span>stop/restart<br><br>Web目录： <span class="hljs-regexp">/var/</span>www<br>安装目录： <span class="hljs-regexp">/etc/</span>apache2/<br>全局配置： <span class="hljs-regexp">/etc/</span>apache2/apache2.conf<br>监听端口： <span class="hljs-regexp">/etc/</span>apache2/ports.conf<br>虚拟主机： <span class="hljs-regexp">/etc/</span>apache2<span class="hljs-regexp">/sites-enabled/</span><span class="hljs-number">000</span>-default.conf<br>web服务器安装完毕：内网通过内网地址访问，外网通过域名映射访问：http:<span class="hljs-regexp">//i</span>ngcraft.cn:<span class="hljs-number">8888</span>/<br>mysql 服务<br>查看状态：$ service mysql status<span class="hljs-regexp">/start/</span>stop/restart<br>---------------<br>mysql允许远程连接设置：<br>设置bind address：<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> 删除或者注释 共有两处修改好必须重启！！！<br>地址：<span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/mysql.conf.d/my</span>sqld.cnf<br><br>php 服务<br>查看php-fpm是否开启<br>命令：ps -ef | grep php<br>查看php-fpm的位置<br>命令：whereis php-fpm<br>开启php-fpm<br>sudo <span class="hljs-regexp">/etc/i</span>nit.d/php7.<span class="hljs-number">0</span>-fpm start<br><br>————————————————<br>修改权限<br>$ sudo chmod <span class="hljs-number">777</span> <span class="hljs-regexp">/var/</span>www<br>----------------<br>安装phpMyAdmin<br>$ sudo apt-get install phpmyadmin<br>安装完成，访问路径：http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/phpmyadmin/i</span>ndex.php<br>----------------<br>配置apache<br>$ vim <span class="hljs-regexp">/etc/</span>apache2/apache2.conf<br> <br>末尾添加：<br> <br>include <span class="hljs-regexp">/etc/</span>phpmyadmin/apache.conf<br> <br>AddType application/x-httpd-php .php .htm .html<br> <br>AddDefaultCharset UTF-<span class="hljs-number">8</span><br>————————————————<br>网站目录 <br><span class="hljs-regexp">/var/</span>www/html<br><br>-----------------<br></code></pre></td></tr></table></figure><hr><h3 id="部署FTP服务器"><a href="#部署FTP服务器" class="headerlink" title="部署FTP服务器"></a>部署FTP服务器</h3><blockquote><p>配置好了WEB服务器，那就需要考虑文件传输到服务器上了，根据万能百度的方案，选择了vsftpd 作为linux服务器上的FTP办法</p></blockquote><ol><li>安装vsftpd服务器</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ sudo apt-<span class="hljs-builtin-name">get</span> install vsftpd<br></code></pre></td></tr></table></figure><ol start="2"><li>配置vsftpd.conf文件</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ sudo vi /etc/vsftpd.conf<br><br>设置以下允许<br><span class="hljs-attribute">local_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">write_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">chroot_local_user</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">chroot_list_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-comment"># (default follows) 允许chroot_list文件中配置的用户登录此ftp服务器。</span><br><span class="hljs-attribute">chroot_list_file</span>=/etc/vsftpd.chroot_list<br><br>---------------------<br>配置ftp服务器的上传下载文件所在的目录。<br><span class="hljs-attribute">local_root</span>=/var/www/html【例】<br>------------------<br></code></pre></td></tr></table></figure><ol start="3"><li>给ftp服务器配置使用用户等信息（此处操作没有正常实现，暂时记录备份，后面再做调整）</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ vi <span class="hljs-regexp">/etc/</span>vsftpd.chroot_list<br>$ cd <span class="hljs-regexp">/var/</span>www/html<br>$ mkdir -p share 建立一个share文件夹<br>$ sudo <span class="hljs-regexp">/etc/i</span>nit.d/vsftpd restart 重启ftp<br></code></pre></td></tr></table></figure><p>​    4.ftp服务器搭建完毕后通过地址 <a href="ftp://ingcraft.cn/">ftp://ingcraft.cn</a> 访问，ftp默认端口号21，在主路由中端口映射需要正确填入，但是在实际访问中可以省略（此处废话连篇）</p><hr><h3 id="Python系列"><a href="#Python系列" class="headerlink" title="Python系列"></a><strong>Python系列</strong></h3><blockquote><p>Python系列为后期各种基于python项目做准备，毕竟这台小设备，24小时供电，如有部署需求，当然是要压榨这台Nanopi的。</p></blockquote><p>因为linux是默认安装 python 2.7 和 python 3.5 双版本的，输入指令 python 进入的是 python2.7,输入python3才是进入3.5，考虑到平时和未来都是用python3以上版本，所以可以通过一下两条指令使 python 指令优先进入3.5：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo update-alternatives --install <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/python python /u</span>sr<span class="hljs-regexp">/bin/</span>python2 <span class="hljs-number">100</span> <br>sudo update-alternatives --install <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/python python /u</span>sr<span class="hljs-regexp">/bin/</span>python3 <span class="hljs-number">150</span><br></code></pre></td></tr></table></figure><h4 id="安装-pip"><a href="#安装-pip" class="headerlink" title="安装 pip"></a>安装 pip</h4><p>pip用来下载安装和管理python的各种第三方库非常方便！</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> install python3-pip<br></code></pre></td></tr></table></figure><p>各种刷屏后（可能有按 Y 确认输入）,输入以下指令,注意这里使用pip的指令是 pip3，不是pip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">pip3</span> -V<br></code></pre></td></tr></table></figure><p>卡顿几秒后，没有报错，打印出pip版本，恭喜，pip到此安装完成！</p><p> 升级pip，升级完之后直接输 pip 也能调用 pip3 了</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> –upgrade pip<br></code></pre></td></tr></table></figure><p>升级失败！以后研究 之后安装都为pip3 xxxx xxxx</p><h4 id="pip安装第三方模块"><a href="#pip安装第三方模块" class="headerlink" title="pip安装第三方模块"></a>pip安装第三方模块</h4><p>用pip安装python的串口模块试试</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> pyserial<br></code></pre></td></tr></table></figure><p>进入python试试模块是否能用,无报错成功</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">python</span><br><span class="hljs-keyword">import</span> serial<br></code></pre></td></tr></table></figure><hr><h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>到此，LAMP服务器+FTP服务器已完全结束，虽然中途还有多出BUG和功能没有实现，但大体方法都基本完成，正式投入使用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>nanopi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/06/10/hello-world/"/>
    <url>/2021/06/10/hello-world/</url>
    
    <content type="html"><![CDATA[<blockquote><p>​        由于个人懒癌晚期，导致这套个人博客系统到了2021年才问世！我决定了无数次开始研究博客，却又在无数次的三分钟热度中消亡。😂😂😂</p><p>​        终于决定不再偷懒，赶紧补齐教程，来一篇真正的Hello World。</p></blockquote><hr><h2 id="在-GitHub-上部署-hexo-博客系统步骤"><a href="#在-GitHub-上部署-hexo-博客系统步骤" class="headerlink" title="在 GitHub  上部署 hexo 博客系统步骤"></a>在 GitHub  上部署 hexo 博客系统步骤</h2><h3 id="软件支持"><a href="#软件支持" class="headerlink" title="软件支持"></a>软件支持</h3><h4 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h4><p>下载地址 <a href="https://nodejs.org/en/">node.js</a><br>直接双击下载下来的msi文件，一路下一步就ok了，安装完之后调出命令行或者node命令输入终端，输入node -v看到版本信息就表明安装成功了。如果不会就参考<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html">node.js</a>安装</p><h4 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h4><p>下载地址 <a href="https://git-scm.com/">git下载</a><br>直接双击下载下来的git安装程序，同node安装，安装完之后右键发现多了两个Git GUI Here 、Git Bash Here，点击后者，然后输入git –version出现版本信息就表明安装成功了。</p><h4 id="注册-github账号"><a href="#注册-github账号" class="headerlink" title="注册 github账号"></a>注册 github账号</h4><p>github 官网 github More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="git-连接github配置："><a href="#git-连接github配置：" class="headerlink" title="git 连接github配置："></a>git 连接github配置：</h3><h4 id="配置SSH-key："><a href="#配置SSH-key：" class="headerlink" title="配置SSH key："></a>配置SSH key：</h4><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment">#检查本机已存在的ssh**</span><br>$ <span class="hljs-keyword">cd</span> ~<span class="hljs-string">/.</span> ssh <br></code></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#生成 ssh key</span><br>ssh-****** -t rsa -C <span class="hljs-string">&quot;邮件地址&quot;</span><br></code></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><img src="../images/hello-world/SSH.jpg"><h4 id="测试是否成功："><a href="#测试是否成功：" class="headerlink" title="测试是否成功："></a>测试是否成功：</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>ssh -T git<span class="hljs-variable">@github</span>.com  <span class="hljs-comment"># 注意邮箱地址不用改</span><br></code></pre></td></tr></table></figure><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">Hi liuxianan! You<span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does <span class="hljs-keyword">not</span> provide shell <span class="hljs-keyword">access</span>.<br></code></pre></td></tr></table></figure><p>此时你还需要配置：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">$ git config --<span class="hljs-keyword">global</span> user.name <span class="hljs-string">&quot;lixuanye1994&quot;</span> <span class="hljs-meta">#你的github用户名，非昵称</span><br>$ git config --<span class="hljs-keyword">global</span> user.email <span class="hljs-string">&quot;1121795911@qq.com&quot;</span> <span class="hljs-meta">#填写你的github注册邮箱</span><br></code></pre></td></tr></table></figure><h3 id="搭建个人博客"><a href="#搭建个人博客" class="headerlink" title="搭建个人博客"></a>搭建个人博客</h3><h4 id="安装-hexo："><a href="#安装-hexo：" class="headerlink" title="安装 hexo："></a>安装 hexo：</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ cnpm <span class="hljs-keyword">install</span> -g hexo<br></code></pre></td></tr></table></figure><h4 id="安装个人博客"><a href="#安装个人博客" class="headerlink" title="安装个人博客"></a><strong>安装个人博客</strong></h4><p>进入到 你本地的博客存放路径例如 F:\hexo 使用cmd，初始化博客</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> blog<br></code></pre></td></tr></table></figure><p>初始化完成以后，在hexo文件夹中会生成一个blog文件夹实例</p><img src="../images/hello-world-hexo-blog.jpg">]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
