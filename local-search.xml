<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>自学python整理</title>
    <link href="/2021/08/12/%E8%87%AA%E5%AD%A6python%E6%95%B4%E7%90%86/"/>
    <url>/2021/08/12/%E8%87%AA%E5%AD%A6python%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="Python-自学笔记"><a href="#Python-自学笔记" class="headerlink" title="Python 自学笔记"></a>Python 自学笔记</h1><blockquote><p>前言：Python之禅 <strong>import this</strong></p><p>The Zen of Python, by Tim Peters</p><p>Beautiful is better than ugly.<br>Explicit is better than implicit.<br>Simple is better than complex.<br>Complex is better than complicated.<br>Flat is better than nested.<br>Sparse is better than dense.<br>Readability counts.<br>Special cases aren’t special enough to break the rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In the face of ambiguity, refuse the temptation to guess.<br>There should be one– and preferably only one –obvious way to do it.<br>Although that way may not be obvious at first unless you’re Dutch.<br>Now is better than never.<br>Although never is often better than <em>right</em> now.<br>If the implementation is hard to explain, it’s a bad idea.<br>If the implementation is easy to explain, it may be a good idea.<br>Namespaces are one honking great idea – let’s do more of those!</p></blockquote><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量:"></a>变量:</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.变量不能以数字开头命名，test_<span class="hljs-number">1</span> 可以，<span class="hljs-number">1</span>_test不可以<br><span class="hljs-attribute">2</span>.变量不能包含空格，分隔命名单词最好用下划线,test_first<br><span class="hljs-attribute">3</span>.变量不能使用关键字和函数名<br><span class="hljs-attribute">4</span>.最好使用小写字母命名变量<br><span class="hljs-attribute">5</span>.同时给多个变量赋值 x,y,z = <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span><br><span class="hljs-attribute">6</span>.常量用大写<br></code></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串:"></a>字符串:</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-number">1.</span>字符串首字母大写方法：xxx.title<span class="hljs-comment">()</span><br><span class="hljs-number">2.</span>字符串全部大写方法：xxx.upper<span class="hljs-comment">()</span><br><span class="hljs-number">3.</span>字符串全部小写方法：xxx.lower<span class="hljs-comment">()</span><br><span class="hljs-number">4.</span>在字符串中使用变量“f字符串”：test = f<span class="hljs-string">&quot;&#123;one&#125;&#123;two&#125;&quot;</span><br><span class="hljs-number">5.</span>字符串末尾删除空白方法：xxx.rstrip<span class="hljs-comment">()</span><br><span class="hljs-number">6.</span>字符串开头删除空白方法：xxx.lstrip<span class="hljs-comment">()</span><br><span class="hljs-number">7.</span>字符串两端删除空白方法：xxx.strip<span class="hljs-comment">()</span><br></code></pre></td></tr></table></figure><h3 id="数学计算："><a href="#数学计算：" class="headerlink" title="数学计算："></a>数学计算：</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">1.+ - * / , ** 表示^ 乘方<br>2.浮点数直接计算，相除结果都是浮点数<br></code></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">student = [<span class="hljs-string">&#x27;zhangsan&#x27;</span>,<span class="hljs-string">&#x27;lisi&#x27;</span>,<span class="hljs-string">&#x27;wangwu&#x27;</span>,<span class="hljs-string">&#x27;zhaoliu&#x27;</span>]<br><span class="hljs-built_in">print</span>(student)<br>--------<br>结果：<br>[<span class="hljs-string">&#x27;zhangsan&#x27;</span>,<span class="hljs-string">&#x27;lisi&#x27;</span>,<span class="hljs-string">&#x27;wangwu&#x27;</span>,<span class="hljs-string">&#x27;zhaoliu&#x27;</span>]<br></code></pre></td></tr></table></figure><h3 id="访问列表元素："><a href="#访问列表元素：" class="headerlink" title="访问列表元素："></a>访问列表元素：</h3><p>1.提取student中第一个元素:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(student[<span class="hljs-number">0</span>]),结果: zhangsan<br></code></pre></td></tr></table></figure><p>配合xxx.title() 有奇效:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(student[<span class="hljs-number">0</span>].title()),结果：Zhangsan<br></code></pre></td></tr></table></figure><p>2.列表索引从0开始，最后一个代码位[-1],</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(student[-<span class="hljs-number">1</span>]) 结果：zhaoliu<br></code></pre></td></tr></table></figure><p>3.增删改：</p>]]></content>
    
    
    <categories>
      
      <category>PYTHON技术栈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PYTHON</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021下半年目标</title>
    <link href="/2021/07/09/2021%E4%B8%8B%E5%8D%8A%E5%B9%B4%E7%9B%AE%E6%A0%87/"/>
    <url>/2021/07/09/2021%E4%B8%8B%E5%8D%8A%E5%B9%B4%E7%9B%AE%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<p><strong>职业生涯规划</strong></p><p>方向</p><p>从招聘要求中提取所需学习技能</p><p>多利用一下业务时间学习</p><p>喜欢钻研IT技术，享受技术提高带来的成就感</p><p><strong>如何制定职业规划</strong><br>制定职业规划之前首先要做好自我剖析工作。比如：<br><strong>个人情况方面：</strong><br>拥有哪些专业知识，知识的水平？<br>拥有哪些技能，技能的水平？<br>拥有哪些兴趣，为兴趣投入的精力？<br>学习（工作）动机是什么,强烈程度?<br>学习（工作）态度怎样？<br>拥有怎样的沟通能力？<br>拥有怎样的组织能力？<br><strong>个人掌握的资源方面：</strong><br>本人的家庭情况？(经济状况、家人期望、家族文化等以及对本人的影响)<br>本人的专业情况？(在学校学的哪些学科对今后发展方向有帮助)<br>本人的朋友情况？(哪些朋友，甚至朋友的朋友在就业和发展上能给你的帮助)<br>本人的其他关系圈？（那些关系圈是否有人能给予直接或者间接的支持帮助）<br><strong>目前岗位要求方面：</strong><br>目标岗位要求有什么的专业知识和技能水平？<br>目标岗位要求我有什么样的沟通能力？<br>目标岗位要求我有什么样的组织能力？<br>目标岗位还有哪些其它要求（如英语水平、项目经历、行业背景，etc）</p><p>做好自我剖析之后，就可以指定行动计划了，在指定行动计划时可以将岗位要求方面的差距逐一进行分析：<br>如下图：</p><p><img src="https://pic2.zhimg.com/80/v2-7b5955db1c7d9c02039abcf8fa8be261_720w.jpg" alt="img"></p><p><strong>如何执行计划</strong><br>对于计划的执行，这里借用一个别的行业术语：PDCA<br>1、P (plan) 计划，包括方针和目标的确定，以及活动规划的制定。<br>2、D (Do) 执行，根据已知的信息，设计具体的方法、方案和计划布局；再根据设计和布局，进行具体运作，实现计划中的内容。<br>3、C (check) 检查，总结执行计划的结果，分清哪些对了，哪些错了，明确效果，找出问题。<br>4、A (action)对总结检查的结果进行处理，对成功的经验加以肯定，并予以标准化；对于失败的教训也要总结，引起重视。对于没有解决的问题，应提交给下一个PDCA循环中去解决。</p><p><img src="https://pic3.zhimg.com/80/v2-7df4fea6774d00f88bc4538d769faa6e_720w.jpg" alt="img"></p><hr><h1 id="2021年目标下半年："><a href="#2021年目标下半年：" class="headerlink" title="2021年目标下半年："></a>2021年目标下半年：</h1><ul><li><strong>全栈java、python继续深入</strong>7月</li><li><strong>软件设计师考试</strong>10月</li><li><strong>教师资格证</strong>11月</li></ul><p>近期学习内容制定：</p><table><thead><tr><th align="left">技术类型</th><th align="left">制定时间</th><th align="left">内容</th><th>完成度</th></tr></thead><tbody><tr><td align="left">Java web初期</td><td align="left">7月</td><td align="left">个人博客搭建</td><td></td></tr><tr><td align="left"></td><td align="left">7月18日结束</td><td align="left">练手项目1-实现</td><td></td></tr><tr><td align="left"></td><td align="left">7月25日结束</td><td align="left">明菱网站搭建</td><td></td></tr><tr><td align="left"></td><td align="left">7月31日结束</td><td align="left">ing网站搭建</td><td></td></tr><tr><td align="left">Python</td><td align="left">8月</td><td align="left">重写JAVA WEB初期项目</td><td></td></tr><tr><td align="left"></td><td align="left">8-9月</td><td align="left">软件设计师考试复习</td><td></td></tr><tr><td align="left"></td><td align="left">待定。。</td><td align="left">待定。。</td><td></td></tr></tbody></table><p><strong>完成目标最关键方法：自 律</strong></p><p><strong>做一个三年计划，每一段时间要有自我反思，总结</strong></p><hr><p>7月———–&gt;主学 兼职突破口<br>8月———–&gt;次学 兼职寻求<br>9月———–&gt;考证学习、时间定制<br>10月———&gt;软件兼职尝试<br>11月———–&gt;突破兼职收入<br>12月———&gt;月赚1万目标</p><p>—————————-&gt;</p><p>三年计划，五年目标：</p><p>短期目标：学习一门软件语言精通；中期目标：涨薪；长期目标：转行软件程序员</p><p>2021年语言入门—-&gt;进阶到中级水平，月薪争取8-8.5</p><p>2022年转行软件程序员 ，年底月薪争取9-10</p><p>2023年跳槽月薪争取到15</p>]]></content>
    
    
    <categories>
      
      <category>职业规划</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>网络工程师认证HCIA</title>
    <link href="/2021/06/17/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%AE%A4%E8%AF%81HCIA/"/>
    <url>/2021/06/17/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%AE%A4%E8%AF%81HCIA/</url>
    
    <content type="html"><![CDATA[<p>## HCIA-Routing &amp; Switching V2.5 考试大纲</p><p><img src="/img/huawei-road.jpg"></p><p>## 考试概述              </p><p><img src="/img/huawei-testlist.png"></p><p>​            </p><p><strong>考试范围</strong></p><p>* HCIA-Routing  &amp;  Switching 考试覆盖路由交换(数通)基础知识：</p><p>* TCP/IP 协议栈基础知识， </p><p>* PPP 等广域网协议基本原理以及在华为路由器中的实现，</p><p>* 以太网技术、STP、VLAN 原理以及在华为交换机中的实现，</p><p>* OSPF 路由协议基本原理以及在华为路由器中的实现，</p><p>* 网络安全技术以及华为路由交换设备中的实现，</p><p>* SNMP 等网络管理的基本原理，</p><p>* IPv6 的基础知识以及 OSPFv3、DHCPv6 协议基本原理和实现，</p><p>* MPLS、SR 基本原理。</p><p><img src="/img/huawei-testlist2.png"></p><hr><p>1.. IP 网络基础</p><p>1.1 路由交换（数通）基础知识</p><p>1.2 网络基本概念、IP 网络构架、标准化组织与协议</p><p>1.3 OSI、TCP/IP 协议模型结构、各个层次的功能以及报文封装</p><p>1.4 IPv4 子网划分</p><p>1.5 ARP 原理</p><p>1.6TCP/UDP 原理</p><p>1.7 数据转发过程</p><p>1.8 常用应用层协议 FTP、DHCP 的工作原理</p><p>1.9 Ping，Tracert，Telnet 等常用工具原理与应用</p><hr><p>2..局域网技术</p><p>2.1 以太网技术、交换机基本原理</p><p>2.2 STP、RSTP、VLAN 基本原理以及在 VRP  中的实现</p><p>2.3 如何使用 STP、RSTP、VLAN 等技术以及如何使用华为交换机构建小型交换网络</p><hr><p>3..广域网技术</p><p>3.1 HDLC、PPP 等在 VRP 中的实现</p><hr><p>4..路由技术</p><p>4.1 静态路由协议原理、OSPF 协议基本原理以及在VRP 中的实现</p><p>4.2 如何使用静态、OSPF 等技术以及如何使用华为路由器构建小型路由网络</p><hr><p>5..网络安全</p><p>5.1 AAA 工作原理</p><p>5.2 ACL 原理以及在华为路由设备中的配置</p><p>5.3 IPSec  VPN、GRE 工作原理以及在华为路由设备中的配置</p><p>5.4 如何利用网络安全技术保证网络安全性</p><hr><p>6..产品知识</p><p>6.1 VRP 特点、VRP 基本操作与维护</p><p>6.2 华为路由器、交换机产品特点以及在 IP 网络中的应用</p><hr><p>7..网络管理</p><p>7.1 SNMP 原理与配置</p><p>7.2 eSight 基础知识以及简单应用</p><hr><p>8.. IPv6 技术</p><p>8.1 IPv6 基础</p><p>8.2 OSPFv3 协议原理以及在华为路由设备中的配置</p><p>8.3 DHCPv6 协议原理以及在 IP 网络中的应用</p><p>\9. .MPLS 和 Segment  Routing 基础</p><p>9.1 MPLS 基本原理</p><p>9.2 Segment  Routing 基本原理<strong>请注意：</strong></p><p>本文提到的考试内容仅仅为考生提供一个通用的考试指引，本文未提到的其他相关内容在考试中也有可能出现。</p><p>参考书籍</p><p>华为认证HCIA- Routing &amp; Switching V2.5 课程华为产品文档</p><p>推荐培训</p><p>HCIA- Routing &amp; Switching V2.5 培训</p>]]></content>
    
    
    <categories>
      
      <category>网络工程师</category>
      
    </categories>
    
    
    <tags>
      
      <tag>华为HCIA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML 5 基础知识点</title>
    <link href="/2021/06/17/HTML-5-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <url>/2021/06/17/HTML-5-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>HTML 是网页开发的基础，从最简单的网页开发基础入手，使用常见的标签制作网页内容，包含了以下技术点： </p><p>```</p><p>标签语法|排版标签|布局标签|多媒体标签|符号实体|语义化|路径|元数据|文档声明</p><p>```</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>在 HTML 结构的基础上，通过浮动、定位、Flex 精细控制网页布局，通过背景、圆角、阴影、渐变等美装饰美化网页内容，结合转换、过渡、动画高级特性增强用户体验，能够编写大型综合性网页。</p><p>```</p><p>​    选择器|规则声明|盒模型|文档流|浮动|字体|背景|伪类|3大特征|圆角|限影|过渡|透明|伪元素|定位|Web 字体</p><p>```</p><h3 id="网页布局"><a href="#网页布局" class="headerlink" title="网页布局"></a>网页布局</h3><p>```</p><p>元素居中|自适应布局|BFC|浏览器内核|性能优化|文档编码|设计稿</p><p>```</p><h3 id="移动端布局"><a href="#移动端布局" class="headerlink" title="移动端布局"></a>移动端布局</h3><p>```</p><p>Flex布局|Less基础语法|媒体查询|分辨率|像素密度|像素|视口|媒体查询|rem|屏幕适配</p><p>```</p><p>```</p><p>Bootstrap|响应断点|栅格化|组件</p><p>```</p><h3 id="JAVAScript"><a href="#JAVAScript" class="headerlink" title="JAVAScript"></a>JAVAScript</h3><p>了解语言的基本概念，熟识语法规则，培养语言基础逻辑能力，建立良好的编程思维，具有一定的语言驾驭能力。</p><p>```</p><p>变量|数据类型|运算符|类型转称|函数|对象|流程控制|数组|Math|内置函数</p><p>```</p><h3 id="WebAPI"><a href="#WebAPI" class="headerlink" title="WebAPI"></a>WebAPI</h3><p>学习客户端开发技术，能够根据产品需求完成开发任务，如视觉交互、数据处理、安全、性能等，熟练掌握 DOM 操作的方法，能够分析视觉交互需求，结合 CSS 规则设计合理的 DOM 结构，完成开发任务。</p><p>```</p><p>宿主环境|节点查找|节点操作|节点关系|事件|事件流|事件委托|间歇函数|高阶函数|伪数组|执行环境|自执行函数|命名空间|排序|延时函数|正则|表单|自定义属性|重绘|回流|预加载|懒加载|生命周期</p><p>```</p><h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><p>借助 jQuery 提升开发的效率，同时借鉴和学习 jQuery 的封装实现思想，巩固面向对象的相关知识，加深对面象对象的理解。</p><p>```</p><p>选择器|节点方法|动画|动画队列|事件|事件委托|链式操作|插件|插件机制</p><p>```</p><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><p>系统的学习网页数据交互的 Ajax 技术，建立前后端交互的知识体系，为学生夯实网络编程的基础，为后期高级课程的学习做好铺垫。</p><p>```</p><p>客户端与服务器|URL 地址|jQuery 中的 Ajax|接口|form 表单提交|模板引擎|XMLHttpRequest|XHR Level2|数据交换格式|封装 ajax|文件上传|axios 基本使用|跨域|防抖节流|HTTP 协议</p><p>```</p>]]></content>
    
    
    <categories>
      
      <category>前端技术栈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nanopi Neo2 入坑指南</title>
    <link href="/2021/06/10/Nanopi-Neo2-%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    <url>/2021/06/10/Nanopi-Neo2-%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h3 id="写在前面："><a href="#写在前面：" class="headerlink" title="写在前面："></a>写在前面：</h3><p>​        偶然间在B站看到了一位野生极客工程师大佬<a href="https://www.bilibili.com/video/BV19E411a7Sf">稚晖君</a>的room tour视频，很是激动和羡慕啊，又注意到超迷你的开发板设备 Nanopi ，心血来潮！这比树莓派等小巧太多了，可装linux系统，那就意味着，可以拥有一台属于自己的Web服务器、FTP服务器、游戏服务器、NAS服务器。。。等等一系列骚操作，小巧省电，性能够用！ 那还不着手搞事情</p><p>​       作为一个立志成为全栈工程师的我，立刻咸鱼入手开始 开发板入坑之旅</p><hr><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><blockquote><p>官方 WIKI <a href="http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2/zh">http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2/zh</a></p><p>新机到手操作</p></blockquote><ul><li><p>烧录系统</p><ul><li><p>下载系统固件</p><p><a href="https://pan.baidu.com/s/1rtZfrVg4fP1WhjlspvfJfA">百度网盘</a>  </p><ul><li>使用镜像 <strong>nanopi-neo2_sd_friendlycore-xenial_4.14_arm64_YYYYMMDD.img.zip</strong> </li><li>烧写工具 <strong>win32diskimager.rar</strong></li><li>完成后插卡上电STAT灯闪烁，成功启动系统。如长期处于红灯状态，需重新烧录系统！</li></ul></li></ul></li><li><p>登录</p><p>烧录系统成功后，这其实就成为一台普通的linux电脑，在linux下先操作好用户账户密码，之后再考虑各种骚操作。以下是个人设置的<strong>普通账户</strong>和<strong>超级账户</strong>：</p><ul><li><p>普通用户：    </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">用户名: <span class="hljs-literal">pi</span><br>密  码: <span class="hljs-number">1994</span><br></code></pre></td></tr></table></figure></li><li><p>Root用户：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">用户名: root<br>密  码: <span class="hljs-symbol">1994lxy@</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>进入系统</p><ul><li><p>软件包源设置成国内：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs linux">$ wget http://wiki.friendlyarm.com/utils/aptsouce.sh<br>$ chmod 755 aptsouce.sh<br>$ sudo -H ./aptsouce.sh<br>$ sudo apt-get update<br><br></code></pre></td></tr></table></figure></li><li><p>安装OLED驱动</p><p>购买的Nanopi 和稚晖君 一直，只是外壳是银色金属，配屏幕128*90像素，后期考虑完成 blackapple</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/friendlyarm/NanoHatOLED.git</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">cd</span> NanoHatOLED</span><br><span class="hljs-meta">$</span><span class="bash"> sudo -H ./intall.sh</span><br></code></pre></td></tr></table></figure><p>重启完成</p></li></ul></li></ul><hr><h3 id="部署LAMP-LNMP环境"><a href="#部署LAMP-LNMP环境" class="headerlink" title="部署LAMP/LNMP环境"></a>部署LAMP/LNMP环境</h3><blockquote><p>暂时选择了LAMP环境，Nginx 暂时不熟悉，后面再尝试更换</p><p>已完成通过 <a href="http://ingcraft.cn:8888/love.html">http://ingcraft.cn:8888/love.html</a> 来访问此服务器</p><p>还部署了自己的毕业设计作品 OA系统通过 <a href="http://ingcraft.cn:8888/ml">http://ingcraft.cn:8888/ml</a> 来访问</p></blockquote><ol><li>安装mysql</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ apt-<span class="hljs-builtin-name">get</span> install mysql-server<br>$ apt-<span class="hljs-builtin-name">get</span> install mysql-client<br>账号 root<br>密码 1994lxy@<br></code></pre></td></tr></table></figure><ol start="2"><li>安装apache</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ apt-<span class="hljs-builtin-name">get</span> install apache2<br></code></pre></td></tr></table></figure><ol start="3"><li>安装php</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ apt-<span class="hljs-builtin-name">get</span> install php<br>$ apt-<span class="hljs-builtin-name">get</span> install libapache2-mod-php<br>$ apt-<span class="hljs-builtin-name">get</span> install php7.0-mysql<br></code></pre></td></tr></table></figure><ol start="4"><li>检查</li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>apache2  -v<br><span class="hljs-variable">$ </span>mysql --version<br><span class="hljs-variable">$ </span>php  -v<br></code></pre></td></tr></table></figure><ol start="5"><li>使用</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs awk">apache 服务<br>查看状态：$ service apache2 status<span class="hljs-regexp">/start/</span>stop/restart<br><br>Web目录： <span class="hljs-regexp">/var/</span>www<br>安装目录： <span class="hljs-regexp">/etc/</span>apache2/<br>全局配置： <span class="hljs-regexp">/etc/</span>apache2/apache2.conf<br>监听端口： <span class="hljs-regexp">/etc/</span>apache2/ports.conf<br>虚拟主机： <span class="hljs-regexp">/etc/</span>apache2<span class="hljs-regexp">/sites-enabled/</span><span class="hljs-number">000</span>-default.conf<br>web服务器安装完毕：内网通过内网地址访问，外网通过域名映射访问：http:<span class="hljs-regexp">//i</span>ngcraft.cn:<span class="hljs-number">8888</span>/<br>mysql 服务<br>查看状态：$ service mysql status<span class="hljs-regexp">/start/</span>stop/restart<br>---------------<br>mysql允许远程连接设置：<br>设置bind address：<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> 删除或者注释 共有两处修改好必须重启！！！<br>地址：<span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/mysql.conf.d/my</span>sqld.cnf<br><br>php 服务<br>查看php-fpm是否开启<br>命令：ps -ef | grep php<br>查看php-fpm的位置<br>命令：whereis php-fpm<br>开启php-fpm<br>sudo <span class="hljs-regexp">/etc/i</span>nit.d/php7.<span class="hljs-number">0</span>-fpm start<br><br>————————————————<br>修改权限<br>$ sudo chmod <span class="hljs-number">777</span> <span class="hljs-regexp">/var/</span>www<br>----------------<br>安装phpMyAdmin<br>$ sudo apt-get install phpmyadmin<br>安装完成，访问路径：http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/phpmyadmin/i</span>ndex.php<br>----------------<br>配置apache<br>$ vim <span class="hljs-regexp">/etc/</span>apache2/apache2.conf<br> <br>末尾添加：<br> <br>include <span class="hljs-regexp">/etc/</span>phpmyadmin/apache.conf<br> <br>AddType application/x-httpd-php .php .htm .html<br> <br>AddDefaultCharset UTF-<span class="hljs-number">8</span><br>————————————————<br>网站目录 <br><span class="hljs-regexp">/var/</span>www/html<br><br>-----------------<br></code></pre></td></tr></table></figure><hr><h3 id="部署FTP服务器"><a href="#部署FTP服务器" class="headerlink" title="部署FTP服务器"></a>部署FTP服务器</h3><blockquote><p>配置好了WEB服务器，那就需要考虑文件传输到服务器上了，根据万能百度的方案，选择了vsftpd 作为linux服务器上的FTP办法</p></blockquote><ol><li>安装vsftpd服务器</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ sudo apt-<span class="hljs-builtin-name">get</span> install vsftpd<br></code></pre></td></tr></table></figure><ol start="2"><li>配置vsftpd.conf文件</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ sudo vi /etc/vsftpd.conf<br><br>设置以下允许<br><span class="hljs-attribute">local_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">write_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">chroot_local_user</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">chroot_list_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-comment"># (default follows) 允许chroot_list文件中配置的用户登录此ftp服务器。</span><br><span class="hljs-attribute">chroot_list_file</span>=/etc/vsftpd.chroot_list<br><br>---------------------<br>配置ftp服务器的上传下载文件所在的目录。<br><span class="hljs-attribute">local_root</span>=/var/www/html【例】<br>------------------<br></code></pre></td></tr></table></figure><ol start="3"><li>给ftp服务器配置使用用户等信息（此处操作没有正常实现，暂时记录备份，后面再做调整）</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ vi <span class="hljs-regexp">/etc/</span>vsftpd.chroot_list<br>$ cd <span class="hljs-regexp">/var/</span>www/html<br>$ mkdir -p share 建立一个share文件夹<br>$ sudo <span class="hljs-regexp">/etc/i</span>nit.d/vsftpd restart 重启ftp<br></code></pre></td></tr></table></figure><p>​    4.ftp服务器搭建完毕后通过地址 <a href="ftp://ingcraft.cn/">ftp://ingcraft.cn</a> 访问，ftp默认端口号21，在主路由中端口映射需要正确填入，但是在实际访问中可以省略（此处废话连篇）</p><hr><h3 id="Python系列"><a href="#Python系列" class="headerlink" title="Python系列"></a><strong>Python系列</strong></h3><blockquote><p>Python系列为后期各种基于python项目做准备，毕竟这台小设备，24小时供电，如有部署需求，当然是要压榨这台Nanopi的。</p></blockquote><p>因为linux是默认安装 python 2.7 和 python 3.5 双版本的，输入指令 python 进入的是 python2.7,输入python3才是进入3.5，考虑到平时和未来都是用python3以上版本，所以可以通过一下两条指令使 python 指令优先进入3.5：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo update-alternatives --install <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/python python /u</span>sr<span class="hljs-regexp">/bin/</span>python2 <span class="hljs-number">100</span> <br>sudo update-alternatives --install <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/python python /u</span>sr<span class="hljs-regexp">/bin/</span>python3 <span class="hljs-number">150</span><br></code></pre></td></tr></table></figure><h4 id="安装-pip"><a href="#安装-pip" class="headerlink" title="安装 pip"></a>安装 pip</h4><p>pip用来下载安装和管理python的各种第三方库非常方便！</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> install python3-pip<br></code></pre></td></tr></table></figure><p>各种刷屏后（可能有按 Y 确认输入）,输入以下指令,注意这里使用pip的指令是 pip3，不是pip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">pip3</span> -V<br></code></pre></td></tr></table></figure><p>卡顿几秒后，没有报错，打印出pip版本，恭喜，pip到此安装完成！</p><p> 升级pip，升级完之后直接输 pip 也能调用 pip3 了</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> –upgrade pip<br></code></pre></td></tr></table></figure><p>升级失败！以后研究 之后安装都为pip3 xxxx xxxx</p><h4 id="pip安装第三方模块"><a href="#pip安装第三方模块" class="headerlink" title="pip安装第三方模块"></a>pip安装第三方模块</h4><p>用pip安装python的串口模块试试</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip3 <span class="hljs-keyword">install</span> pyserial<br></code></pre></td></tr></table></figure><p>进入python试试模块是否能用,无报错成功</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">python</span><br><span class="hljs-keyword">import</span> serial<br></code></pre></td></tr></table></figure><hr><h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>到此，LAMP服务器+FTP服务器已完全结束，虽然中途还有多出BUG和功能没有实现，但大体方法都基本完成，正式投入使用。</p>]]></content>
    
    
    <categories>
      
      <category>开发板技术栈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nanopi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/06/10/hello-world/"/>
    <url>/2021/06/10/hello-world/</url>
    
    <content type="html"><![CDATA[<blockquote><p>​        由于个人懒癌晚期，导致这套个人博客系统到了2021年才问世！我决定了无数次开始研究博客，却又在无数次的三分钟热度中消亡。😂😂😂</p><p>​        终于决定不再偷懒，赶紧补齐教程，来一篇真正的Hello World。</p></blockquote><hr><h2 id="在-GitHub-上部署-hexo-博客系统步骤"><a href="#在-GitHub-上部署-hexo-博客系统步骤" class="headerlink" title="在 GitHub  上部署 hexo 博客系统步骤"></a>在 GitHub  上部署 hexo 博客系统步骤</h2><h3 id="软件支持"><a href="#软件支持" class="headerlink" title="软件支持"></a>软件支持</h3><h4 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h4><p>下载地址 <a href="https://nodejs.org/en/">node.js</a><br>直接双击下载下来的msi文件，一路下一步就ok了，安装完之后调出命令行或者node命令输入终端，输入node -v看到版本信息就表明安装成功了。如果不会就参考<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html">node.js</a>安装</p><h4 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h4><p>下载地址 <a href="https://git-scm.com/">git下载</a><br>直接双击下载下来的git安装程序，同node安装，安装完之后右键发现多了两个Git GUI Here 、Git Bash Here，点击后者，然后输入git –version出现版本信息就表明安装成功了。</p><h4 id="注册-github账号"><a href="#注册-github账号" class="headerlink" title="注册 github账号"></a>注册 github账号</h4><p>github 官网 github More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="git-连接github配置："><a href="#git-连接github配置：" class="headerlink" title="git 连接github配置："></a>git 连接github配置：</h3><h4 id="配置SSH-key："><a href="#配置SSH-key：" class="headerlink" title="配置SSH key："></a>配置SSH key：</h4><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment">#检查本机已存在的ssh**</span><br>$ <span class="hljs-keyword">cd</span> ~<span class="hljs-string">/.</span> ssh <br></code></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#生成 ssh key</span><br>ssh-****** -t rsa -C <span class="hljs-string">&quot;邮件地址&quot;</span><br></code></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="/img/hello-world-SSH.jpg"></p><h4 id="测试是否成功："><a href="#测试是否成功：" class="headerlink" title="测试是否成功："></a>测试是否成功：</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>ssh -T git<span class="hljs-variable">@github</span>.com  <span class="hljs-comment"># 注意邮箱地址不用改</span><br></code></pre></td></tr></table></figure><p>如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">Hi liuxianan! You<span class="hljs-symbol">&#x27;ve</span> successfully authenticated, but GitHub does <span class="hljs-keyword">not</span> provide shell <span class="hljs-keyword">access</span>.<br></code></pre></td></tr></table></figure><p>此时你还需要配置：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">$ git config --<span class="hljs-keyword">global</span> user.name <span class="hljs-string">&quot;lixuanye1994&quot;</span> <span class="hljs-meta">#你的github用户名，非昵称</span><br>$ git config --<span class="hljs-keyword">global</span> user.email <span class="hljs-string">&quot;1121795911@qq.com&quot;</span> <span class="hljs-meta">#填写你的github注册邮箱</span><br></code></pre></td></tr></table></figure><h3 id="搭建个人博客"><a href="#搭建个人博客" class="headerlink" title="搭建个人博客"></a>搭建个人博客</h3><h4 id="安装-hexo："><a href="#安装-hexo：" class="headerlink" title="安装 hexo："></a>安装 hexo：</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ cnpm <span class="hljs-keyword">install</span> -g hexo<br></code></pre></td></tr></table></figure><h4 id="安装个人博客"><a href="#安装个人博客" class="headerlink" title="安装个人博客"></a><strong>安装个人博客</strong></h4><p>进入到 你本地的博客存放路径例如 F:\hexo 使用cmd，初始化博客</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> blog<br></code></pre></td></tr></table></figure><p>初始化完成以后，在hexo文件夹中会生成一个blog文件夹实例</p><p><img src="/img/hello-world-hexo-blog.jpg"></p><p>随后使用cmd指令路径，进入blog文件夹执行下列代码：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ hexo g    <span class="hljs-regexp">//</span>生成静态网页<br>$ hexo s    <span class="hljs-regexp">//</span>执行完以后，你就可以去打开 http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">4000</span>/  看本地版的博客效果了<br></code></pre></td></tr></table></figure><h4 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h4><p> 既然有更多的主题选择，那必须捣鼓一下，更换一个主题。在此以本博客主题为例子，其它主题请自行参考他们的维护主页。点击前往 <a href="https://hexo.fluid-dev.com/docs/">Fluid</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
